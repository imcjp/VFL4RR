clear all;
syms d_1 d_2 n
%% Analysis for role "C", the source is from the function run in class exps.ExpForVRL_2P, the Algorithm is VRL-2P.
f = sym(zeros(1,6));
% [Code from] //<Passive Execution> MWNumericArray F1=coMul(Xt, algInfo.getTestId()*Common.ROOMID_BIAS+1, 1);
g = tColMul(d_1,d_2,n);
g = g(3,:);
f = f + g;
% [Code from] //<Passive Execution> EncMat encR=mul(encCt, M21);
g = tMMA(d_2,d_1,d_2);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> encR=mul(M12, encR);
g = tMMA(d_1,d_1,d_2);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> encR=inv(encR);
g = tMIA(d_1);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> MWNumericArray r11=coMul(Xt, algInfo.getTestId()*Common.ROOMID_BIAS+2, 1);
g = tColMul(d_1,1,n);
g = g(3,:);
f = f + g;
% [Code from] //<Passive Execution> EncMat encu1=mul(encR, encr);
g = tMMA(d_1,1,d_1);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> EncMat encv1=EncMat.mul2(C, mul(M12, encu2));
g = tMMA(d_1,1,d_2);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> res = MatComputeHelper.mul(Q,decr(encw));
g = tDecr(d_1,1);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> EncMat encR=mul(encCt, M12);
g = tMMA(d_1,d_2,d_1);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> encR=mul(M21, encR);
g = tMMA(d_2,d_2,d_1);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> encR=inv(encR);
g = tMIA(d_2);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> EncMat encv2=EncMat.mul2(C, mul(M21, encu1));
g = tMMA(d_2,1,d_1);
g = g(2,:);
f = f + g;
% [Code from] //<Passive Execution> res = MatComputeHelper.mul(Q,decr(encw));
g = tDecr(d_2,1);
g = g(2,:);
f = f + g;
res = f;
disp('Analysis for role "C", the source is from the function run in class exps.ExpForVRL_2P, the Algorithm is VRL-2P.');
showRes(res)