==>{"class":"algs.vrlmp.Party","function":"run","alg":"VRL-MP","role":"C"}
public static Map<String,Object> run(String paramJson) {
		......
		CoordinationServer coor=new CoordinationServer(algInfo);

		Party ccs[]=new Party[dim.length];
		for (int i = 0; i < ccs.length; i++) {
			ccs[i]=new Party(algInfo, i);
			Map<String, Object> mp=new HashMap<String, Object>();
			mp.put("DataPiece", XTrainSet[i]);
			if (i+1==ccs.length) {
				mp.put("DataDecision", yTrain);
			}
			ccs[i].loadData(mp);
		}
		coor.setParticipants(ccs);
		coor.prepare();
		coor.startThread();

		//Passive Execution by F2 - Fm
		//F1s[i]=coMul(X, roomNum, 2);//*tSColMul1(d_1_is1,d_i,n,i-1)>3
		//<Passive Execution> EncMat encB=mul(encMrt, encR0);//*tMMA(d_i,d_1_is1,d_1_is1)>2
		//<Passive Execution> EncMat encR4=mul(encB, encMr);//*tMMA(d_i,d_i,d_1_is1)>2
		//<Passive Execution> encR4=inv(encR4);//*tMIA(d_i)>2
		//<Passive Execution> EncMat encR1=mul(encBt, encR4);//*tMMA(d_1_is1,d_i,d_i)>2
		//<Passive Execution> encR1=mul(encR1, encB);//*tMMA(d_1_is1,d_1_is1,d_i)>2
		//<Passive Execution> encR2=mul(encR2,encR1);//*tMMA(d_i,d_1_is1,d_1_is1)>2
		//<Passive Execution> MWNumericArray resw=decr(encResW);//*tDecr(d_i,1)>2

		......

		coor.run();
		......
	}
<==
==>{"class":"algs.vrlmp.Party","function":"run","alg":"VRL-MP","role":"C"}
public static Map<String,Object> run(String paramJson) {
        ......
		CoordinationServer coor=new CoordinationServer(algInfo);

		Party ccs[]=new Party[dim.length];
		for (int i = 0; i < ccs.length; i++) {
			ccs[i]=new Party(algInfo, i);
			Map<String, Object> mp=new HashMap<String, Object>();
			mp.put("DataPiece", XTrainSet[i]);
			if (i+1==ccs.length) {
				mp.put("DataDecision", yTrain);
			}
			ccs[i].loadData(mp);
		}
		coor.setParticipants(ccs);
		coor.prepare();
		coor.startThread();

		......

		//Passive Execution by F1
        //<Passive Execution> MWNumericArray resw=decr(encResW);//*tDecr(d_i,1)>2

		......

		coor.run();
		......
	}
<==
==>{"class":"algs.vrlmp.Party","function":"run","alg":"VRL-MP","role":"C"}
public static Map<String,Object> run(String paramJson) {
		......
		CoordinationServer coor=new CoordinationServer(algInfo);

		Party ccs[]=new Party[dim.length];
		for (int i = 0; i < ccs.length; i++) {
			ccs[i]=new Party(algInfo, i);
			Map<String, Object> mp=new HashMap<String, Object>();
			mp.put("DataPiece", XTrainSet[i]);
			if (i+1==ccs.length) {
				mp.put("DataDecision", yTrain);
			}
			ccs[i].loadData(mp);
		}
		coor.setParticipants(ccs);
		coor.prepare();
		coor.startThread();

		......

		//Passive Execution by Fm
		//<Passive Execution> y2s[i]=coMul(y, roomNum, 2);//*tSColMul1(d_1_is1,1,n,i-1)>3
		//<Passive Execution> EncMat encw=mul(encR, encr);//*tMMA(d_1_is1,1,d_1_is1)>2

		coor.run();
		......
	}
<==